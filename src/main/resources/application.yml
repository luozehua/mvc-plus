server:
  servlet:
    context-path: /spb


spring:
  profiles:
      active: @package.env@
#  devtools:
#    restart:
#      enabled: true
#  datasource:
#    #配置这个属性的意义在于，如果存在多个数据源，监控的时候可以通过名字来区分开来。
#    #如果没有配置，将会生成一个名字，格式是："DataSource-" + System.identityHashCode(this)
#    name: mydb
#    type: com.alibaba.druid.pool.DruidDataSource
#    #连接数据库的url，不同数据库不一样
#    url: jdbc:mysql://localhost:3306/test
#    #连接数据库的用户名
#    username: root
#    #连接数据库的密码。如果你不希望密码直接写在配置文件中，可以使用ConfigFilter。
#    #详细看这里：https://github.com/alibaba/druid/wiki/%E4%BD%BF%E7%94%A8ConfigFilter
#    password: root
#    #这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName(建议配置下)
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    #最小连接池数量 8
#    minIdle: 1
#    #最大连接池数量 8
#    maxActive: 2
#    #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
#    initialSize: 1
#    #有两个含义：
#    #1) Destroy线程会检测连接的间隔时间2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
#    timeBetweenEvictionRunsMillis: 3000
#    #连接保持空闲而不被驱逐的最长时间。
#    minEvictableIdleTimeMillis: 300000
#    #用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
#    validationQuery: SELECT 'LZH' FROM DUAL
#    #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
#    testWhileIdle: true
#    #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
#    testOnBorrow: false
#    #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
#    testOnReturn: false
#mybatis:
#  typeAliasesPackage: com.lzh.mvc.entity
#  mapperLocations: classpath:mapper/*.xml


#mybatis-plus
mybatis-plus:
    mapper-locations: classpath:mapper/*.xml
    #实体扫描，多个package用逗号或者分号分隔
    typeAliasesPackage: com.lzh.mvc.entity
    global-config:
      db-config:
        #刷新mapper 调试神器
        #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
        id-type: 3
        #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
        field-strategy: 2
        #驼峰下划线转换
        column-underline: true
        #数据库大写下划线转换
        #capital-mode: true
        #逻辑删除配置
        logic-delete-value: 0
        logic-not-delete-value: 1
        db-type: mysql
        #自定义填充策略接口实现
        #meta-object-handler: com.baomidou.springboot.xxx
        #自定义SQL注入器
        #sql-injector: com.baomidou.springboot.xxx
    configuration:
        map-underscore-to-camel-case: true
        cache-enabled: false
        #控制台打印SQL
        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    ##logging
    logging:
      level: info

---
spring:
  profiles: dev
  datasource:
    url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: root

---
spring:
  profiles: test
  datasource:
    url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: root

---
spring:
  profiles: production
  datasource:
    url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: root